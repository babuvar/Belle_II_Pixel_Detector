[general]
; [REQUIRED] path to file to be analyzed, this can be latest, newest or nothing to automatically
; determine it from .latestpath
path = latest
; [OPTIONAL] Numpy file that contains pedestals, which will be subtracted from each frame during the analysis (like an
; offline pedestal correction). If not given, no subtraction will be performed
; subtraction = /path/to/subtractionfile.npy
; [OPTIONAL] skip data frames where one or more dhp frames are missing
skip_broken_frames = False
; [OPTIONAL] If this option is set to yes, the elog will ask for a username and password which is used to connect to
; the specified elog.
useELOGcredentials = True

[plots]
; which kind of plots should be made? and which mapping should be used?
; [REQUIRED] mapping type, can be: pxd9, hybrid5, electrical, matrix
; or device (device will be interpreted as pxd9 or hybrid5, depending on module_type in measure.ini)
mapping = device
; [REQUIRED] Should the plots be shown on screen or only saved to disk?
show_plots = False
; [REQUIRED] WARNING! This option is not working at the moment, leave it to False!
plot_frame = False
; [REQUIRED] WARNING! This option is not working at the moment, leave it to False!
plot_ped_both_mapping = False
; [REQUIRED] Plot that shows the noise distribution together with a histogram.
plot_noise = False
; [REQUIRED] Plot that shows the pedestal distribution together with a histogram.
plot_pedestals = True
; [REQUIRED] Plot that shows the pedestal distribution (no mean of frames calculated) together with a histogram.
plot_pedestals_mult = False
; [REQUIRED] Plot pedestal distribution with histogram and noise distribution with given and electrical mapping
plot_everything = False
; [OPTIONAL] Plot only specific range in noise plot (e.g. only show plot from 0 to 3 ADU: " = [0,3]"). For the full range, i.e. min(noise) to max(noise), leave commented. 
#plot_noise_range = [0,3]

[masking]
; [REQUIRED] Apply unconnected channel mask?
mask_unconnected = True
; [REQUIRED] Apply noise masking?
do_noise_masking = True
; [REQUIRED] Which threshold should be used for masking? Unit is ADU.
maskthreshold = 2.5
; [OPTIONAL] Also mask pixel with a noise of 0? This can be good to mask a broken drainline but also masks pixel which
;             are just out of the dynamic range! Only working when noise_masking is True
mask_zero_noise_pixel = False
; [OPTIONAL] This option loads masks from the masks/ folder and applies them to the data. The mask has to be called
;            like 'maskW37_OF1.npy'
do_module_masking = True

[common_mode_correction]
; [REQUIRED] use offline common mode correction?
use_cmc = False
; [REQUIRED] threshold for offline common mode correction
cmc_threshold = 5
